services:
  # MongoDB database
  mongodb:
    image: mongodb/mongodb-community-server:latest
    container_name: ta_mongodb
    ports:
      - "7587:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=analyst
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # Redis cache and message broker
  redis:
    image: redis:7-alpine
    container_name: ta_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django web application
  web:
    build: .
    container_name: ta_web
    command: gunicorn analyst.wsgi:application --bind 0.0.0.0:8000 --workers 4 --timeout 120
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DB_HOST=mongodb
      - DB_PORT=27017
      - MONGODB_URI=mongodb://mongodb:27017/?directConnection=true
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Celery worker for background tasks
  celery_worker:
    build: .
    container_name: ta_celery_worker
    command: celery -A analyst worker --loglevel=info --concurrency=1 --pool=solo
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DB_HOST=mongodb
      - DB_PORT=27017
      - MONGODB_URI=mongodb://mongodb:27017/?directConnection=true
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Celery beat for scheduled tasks
  celery_beat:
    build: .
    container_name: ta_celery_beat
    command: celery -A analyst beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DB_HOST=mongodb
      - DB_PORT=27017
      - MONGODB_URI=mongodb://mongodb:27017/?directConnection=true
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_started
    restart: unless-stopped

volumes:
  mongodb_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  default:
    name: ta_network
