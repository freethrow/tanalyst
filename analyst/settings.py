"""
Django settings for analyst project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

from dotenv import load_dotenv

load_dotenv()

NOMIC_API_KEY = os.getenv("NOMIC_API_KEY")
RESEND_API_KEY = os.getenv("RESEND_API_KEY")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
REDIS_URL = os.getenv("REDIS_URL", "redis://localhost:6379/0")
DB_HOST = os.getenv("DB_HOST")
DB_PORT = os.getenv("DB_PORT")
DB_NAME = os.getenv("DB_NAME")



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-y(&cyhtuzn9#=3^uv3(6+cso$0@nmbaaqfah!*fxs_bc7^u))3"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "articles.apps.ArticlesConfig",
    "analyst.agents",
    "analyst.apps.MongoAdminConfig",
    "analyst.apps.MongoAuthConfig",
    "analyst.apps.MongoContentTypesConfig",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_htmx",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "articles.middleware.LanguageMiddleware",  # Custom language middleware AFTER all others
]

ROOT_URLCONF = "analyst.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "django.template.context_processors.media",
                "articles.context_processors.language_context",
            ],
        },
    },
]

WSGI_APPLICATION = "analyst.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django_mongodb_backend",
        "HOST": "mongodb://localhost:8818/?directConnection=true",
        "NAME": "analyst",
    },
}

# Database routers
# https://docs.djangoproject.com/en/dev/ref/settings/#database-routers
DATABASE_ROUTERS = ["django_mongodb_backend.routers.MongoRouter"]

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en"  # Default language

TIME_ZONE = "Europe/Belgrade"

USE_I18N = True
USE_L10N = True

# Available languages
LANGUAGES = [
    ('it', 'Italiano'),
    ('en', 'English'),
]

# Locale paths
LOCALE_PATHS = [
    BASE_DIR / 'locale',
]


STATIC_URL = "static/"

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django_mongodb_backend.fields.ObjectIdAutoField"

MIGRATION_MODULES = {
    "admin": "mongo_migrations.admin",
    "auth": "mongo_migrations.auth",
    "contenttypes": "mongo_migrations.contenttypes",
}

# Authentication settings
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/login/'


os.environ.setdefault("DJANGO_SETTINGS_MODULE", "djangoagent.settings")

TEMPLATES_DIR = os.path.join(BASE_DIR, "templates")

CELERY_BROKER_URL = "redis://localhost:6379/0"
CELERY_RESULT_BACKEND = "redis://localhost:6379/0"
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
CELERY_TIMEZONE = TIME_ZONE
CELERY_ENABLE_UTC = True

# Caching (Redis via django-redis)
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        # Use a different Redis DB index than Celery (Celery uses 0)
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
        "KEY_PREFIX": "analyst",
        "TIMEOUT": 60 * 15,  # default: 15 minutes
    }
}

CELERY_BEAT_SCHEDULE = {
    "create_all_embeddings": {
        "task": "create_all_embeddings",
        "schedule": 60,
    },
    "translate_untranslated_articles": {
        "task": "translate_untranslated_articles",
        "schedule": 60 * 2,  # Every 2.5 hours
    },
    # "generate_weekly_summary": {
    #     "task": "generate_weekly_summary",
    #     "schedule": 60 * 60 * 24 * 7,  # Every week (7 days)
    # },
    # "scrape_ekapija_scheduled": {
    #     "task": "scrape_ekapija",
    #     "schedule": 60 ,  # Every 1 minutes
    # },
    # "scrape_biznisrs_scheduled": {
    #     "task": "scrape_biznisrs",
    #     "schedule": 60 * 3,  # Every 3 minutes
    # },
    # "send_latest_articles_scheduled": {
    #     "task": "send_latest_articles_email",
    #     "schedule": 90,  # Every 90 seconds
    # },
}
